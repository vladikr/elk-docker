input {
        file {
                mode => "read"
                path => ["/space/**/*.log"]
                codec => json
                type => "CNVLogs"
                file_completed_action => log_and_delete
                file_completed_log_path => "/tmp/processed.log"

        }
}

filter {
        mutate {
                gsub => [
                        "message", "^[^{]*{", "{"
                ]
        }
        ruby {
                code => '
                        path = event.get("[log][file][path]")
                        parts = path.split(File::SEPARATOR)
                        event.set("podName", parts[-5])
                        event.set("containerName", parts[-4])
                        event.set("namespace", parts[-7])
                        event.set("key", sprintf("%s/%s", parts[-7], parts[-5]))
                '
        }
}

filter {
      json {
        source => "message"
      }
}

filter {
      date {
        match => [ "timestamp", "ISO8601" ]
        target => "@timestamp"
      }
    }

filter {
  translate {
    field => "key"
    destination => "[enrichment_data]"
    dictionary_path => "/space/result.json"
  }

  json {
    source => "[enrichment_data]"
  }
}

